{"version":3,"file":"bundle.js","mappings":";;;;;;;;;AAAA;AACA,sBAAsB,gDAAgD;AACtE,wBAAwB,kDAAkD;;AAE1E;AACA;AACA;AACA;AACA,qBAAqB,GAAG;AACxB;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,cAAc,iBAAiB;AAC/B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;;;;;ACjDA,iBAAiB,mBAAO,CAAC,4CAAa;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,MAAM;AACN;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV,QAAQ;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA,wBAAwB,YAAY;AACpC;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,UAAU;AACV,QAAQ;AACR;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACxFA,iBAAiB,mBAAO,CAAC,4CAAa;;AAEtC;AACA;AACA;AACA;AACA,+CAA+C;AAC/C,uCAAuC;AACvC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,yBAAyB,UAAU;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA,uBAAuB,mCAAmC;AAC1D,0BAA0B,wCAAwC;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC9DA,iBAAiB,mBAAO,CAAC,4CAAa;AACtC,qBAAqB,mBAAO,CAAC,oDAAiB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA;AACA;AACA,iCAAiC,wEAAwE;AACzG;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;;;;;;UCvCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,qBAAqB,mBAAO,CAAC,uDAAoB;AACjD,oBAAoB,mBAAO,CAAC,qDAAmB;AAC/C,qBAAqB,mBAAO,CAAC,uDAAoB;;AAEjD;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;AACH,CAAC","sources":["./frontend/api_utils.js","./frontend/follow_toggle.js","./frontend/tweet_compose.js","./frontend/users_search.js","webpack/bootstrap","./frontend/twitter.js"],"sourcesContent":["const APIUtils = {\n  followUser: id => { return APIUtils.changeFollowStatus(id, \"POST\") },\n  unfollowUser: id => { return APIUtils.changeFollowStatus(id, \"DELETE\") },\n\n  changeFollowStatus: (id, method) => {\n    return $.ajax({\n      type: method,\n      dataType: 'json',\n      url: `/users/${id}/follow`,\n      success() {\n        console.log('Success');\n      },\n      error(e) {\n        console.error(e);\n      },\n    });\n  },\n\n  searchUsers(queryVal) {\n    return $.ajax({\n      type: \"GET\",\n      dataType: 'json',\n      url: `/users/search`,\n      data: { query: queryVal },\n      success() {\n        console.log('Success');\n      },\n      error(e) {\n        console.error(e);\n      }\n    }); \n  },\n\n  createTweet(data) {\n    return $.ajax({\n      type: \"POST\",\n      dataType: 'json',\n      url: `/tweets`,\n      data: data,\n      success() {\n        console.log('Success');\n      },\n      error(e) {\n        console.error(e);\n      }\n    }); \n  }\n};\n\nmodule.exports = APIUtils;","const APIUtils = require('./api_utils');\n\nclass FollowToggle {\n  constructor($el, options) {\n    this.$el = $el;\n    this.userId = this.$el.data(\"user-id\") || options['userId'];\n    this.followState = this.$el.data(\"initial-follow-state\") || options['followState'];\n    this.render();\n    //this.handleClick();\n    this.$el.on('click', this.handleClick.bind(this));\n  }\n\n  render() {\n    if (this.followState === \"unfollowed\") {\n      this.$el.text(\"Follow!\");\n      this.$el.prop('disabled', false);      \n    } else if (this.followState === \"followed\") {\n      this.$el.text(\"Unfollow!\");\n      this.$el.prop('disabled', false);\n    } else {\n      this.$el.prop('disabled', true);\n    }\n  }\n\n  handleClick(e) {\n    const followToggle = this;\n\n    e.preventDefault();\n    if (this.followState === \"unfollowed\") {\n      this.followState = 'following';\n      this.render();\n      // this.followRequest();\n      APIUtils.followUser(this.userId).then(() => {\n        followToggle.toggleFollowState();\n        followToggle.render();\n      });\n    } else if (this.followState === \"followed\") {\n      this.followState = 'unfollowing';\n      this.render();\n      // this.unfollowRequest();\n      APIUtils.unfollowUser(this.userId).then(() => {\n        followToggle.toggleFollowState();\n        followToggle.render();\n      });\n    };\n  }\n\n  // followRequest() {\n  //   const that = this;\n  //   $.ajax({\n  //     type: 'POST',\n  //     dataType: 'json',\n  //     url: `/users/${this.userId}/follow`,\n  //     success() {\n  //       that.toggleFollowState();\n  //       that.render();\n  //     },\n  //     error() {\n  //       console.error(\"An error occurred.\");\n  //     },\n  //   });\n  // }\n\n  // unfollowRequest() {\n  //   const that = this;\n  //   $.ajax({\n  //     type: 'DELETE',\n  //     dataType: 'json',\n  //     url: `/users/${this.userId}/follow`,\n  //     success() {\n  //       that.toggleFollowState();\n  //       that.render();\n  //     },\n  //     error() {\n  //       console.error(\"An error occurred.\");\n  //     },\n  //   });\n  // }\n\n  toggleFollowState() {\n    if (this.followState === \"following\") {\n      this.followState = \"followed\";\n    } else if (this.followState === \"unfollowing\") {\n      this.followState = \"unfollowed\";\n    }\n  }\n}\n\nmodule.exports = FollowToggle;\n","const APIUtils = require('./api_utils');\n\nclass TweetCompose {\n  constructor($form) {\n    this.$form = $form;\n    this.$form.data('tweets-ul', '#feed');\n    this.$form.submit(this.submit.bind(this)); // this in submit is the class\n    // this.$form.submit(this.submit); (this in submit is the form itself)\n    this.$textarea = this.$form.find('textarea');\n    this.$textarea.on(\"input propertychange\", this.countChars.bind(this));\n    this.newUserSelect();\n    $('.tweet-mentions').on('click', '.remove-mentioned-user', this.removeMentionedUser.bind(this));\n  }\n\n  submit(event) {\n    event.preventDefault();\n    const $inputs = this.$form.find(':input');\n    const formContent = $inputs.serializeJSON();\n    $inputs.prop('disabled', true);\n    APIUtils.createTweet(formContent).then(tweet => this.handleSuccess($inputs, tweet));\n  }\n\n  clearInput() {\n    this.$form[0].reset();\n  }\n\n  handleSuccess($inputs, tweet) {\n    this.clearInput();\n    $inputs.prop('disabled', false);\n    const tweetUl = $(this.$form.data('tweets-ul'));\n    const tweetData = JSON.stringify(tweet.content);\n    const $li = $(`<li>${tweetData}</li>`);\n    tweetUl.prepend($li);\n    this.countChars();\n    this.$form.find('.tweet-mentions').empty();\n  }\n\n  countChars(event) {\n    const $charsLeft = $(\".chars-left\");\n    $charsLeft.text(`${140 - this.$textarea.val().length} characters left`);\n    // $charsLeft.text(`${140 - event.currentTarget.value.length} characters left`);\n  }\n\n  newUserSelect() {\n    console.log(window.users);\n    const $tweetMentions = this.$form.find('.tweet-mentions');\n    const $mention = $tweetMentions.find('.tweet-mention');\n    const $addMentionBtn = $(\"<button>Add Mention</button>\");\n    this.$form.append($addMentionBtn);\n    $tweetMentions.empty();\n    $addMentionBtn.on('click', event => {\n      event.preventDefault();\n      $tweetMentions.append($mention.clone());\n    })\n  }\n\n  removeMentionedUser(event) {\n    event.preventDefault();\n    $(event.currentTarget).parent().remove();\n  }\n}\n\nmodule.exports = TweetCompose;\n","const APIUtils = require('./api_utils');\nconst FollowToggle = require('./follow_toggle');\n\nclass UsersSearch {\n  constructor($el) {\n    this.$el = $el;\n    this.$input = this.$el.find(\"input[name='search-query']\");\n    this.$ul = this.$el.find(\"ul.users\");\n    this.handleInput();\n  }\n\n  handleInput() {\n    const usersSearch = this;\n    this.$input.on(\"input\", (e) => {\n      const query = e.target.value;\n      APIUtils.searchUsers(query).then((users) => {\n        usersSearch.renderResults(users);\n      })\n    });\n  }\n\n  renderResults(users) {\n    this.$ul.empty();\n    users.forEach((user) => {\n      const $a = $(\"<a>\");\n      $a.attr(\"href\", `/users/${user.id}`);\n      $a.text(user.username);\n      const $li = $('<li>');\n      const $button = $('<button>');\n      $button.class = \"follow-toggle\";\n      // user.followed is from JBuilder\n      new FollowToggle($button, {userId: user.id, followState: user.followed ? \"followed\" : \"unfollowed\"});\n      $li.append($a);\n      $li.append($button);\n      this.$ul.append($li);\n    });\n  }\n}\n\nmodule.exports = UsersSearch;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const FollowToggle = require(\"./follow_toggle.js\");\nconst UsersSearch = require(\"./users_search.js\");\nconst TweetCompose = require(\"./tweet_compose.js\");\n\n$(document).ready(function() {\n  $(\"button.follow-toggle\").each(function(idx, el) {\n    new FollowToggle($(el));\n  })\n\n  $(\"nav.users-search\").each(function(idx, el) {\n    new UsersSearch($(el));\n  })\n\n  $(\"form.tweet-compose\").each(function(idx, el) {\n    new TweetCompose($(el));\n  })\n});\n"],"names":[],"sourceRoot":""}